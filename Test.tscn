[gd_scene load_steps=7 format=2]

[ext_resource path="res://src/cable/Cable.tscn" type="PackedScene" id=1]
[ext_resource path="res://src/power_generator/PowerGenerator.tscn" type="PackedScene" id=2]
[ext_resource path="res://src/power_consumer/XRay.tscn" type="PackedScene" id=3]
[ext_resource path="res://src/power_consumer/Bedroom.tscn" type="PackedScene" id=4]
[ext_resource path="res://src/power_consumer/BloodBank.tscn" type="PackedScene" id=5]

[sub_resource type="GDScript" id=1]
script/source = "extends Node

export var POWER_RATIO: float

var current_power: float = 0.0 setget set_current_power
var consumption_rate: float = 0.0 setget set_consumption_rate

var is_connected_to_xray: bool = false
var is_connected_to_blood: bool = false

onready var power: Node2D = $PowerGenerator
onready var cables: Array = get_tree().get_nodes_in_group(\"cables\")
onready var xray_room: Node2D = $XRay
onready var blood_room: Node2D = $BloodBank
onready var xray_room_id: int = xray_room.get_instance_id()
onready var blood_room_id: int = blood_room.get_instance_id()

onready var generated_label: Label = $Control/VBoxContainer/Generated/Value
onready var consumed_label: Label = $Control/VBoxContainer/Consumed/Value
onready var ratio_label: Label = $Control/VBoxContainer/Ratio/Value


func _ready() -> void:
	assert(POWER_RATIO > 0)
	
	for cable in cables:
		cable.connect(\"rotated\", self, \"_on_Cable_rotated\")


func _physics_process(delta) -> void:
	if Input.is_action_just_pressed(\"ui_accept\"):
		var power: float = current_power + (POWER_RATIO * delta)
		generated_label.text = \"%2.1f\" % power
		var consumption: float = consumption_rate * delta
		set_current_power(clamp(power - consumption, 0, 100))

		
func set_current_power(value: float) -> float:
	current_power = value
	if is_connected_to_xray:
		current_power += 1
	if is_connected_to_blood:
		current_power *= 2
	ratio_label.text = \"%2.1f\" % value
	return current_power
	

func set_consumption_rate(value: float) -> float:
	consumption_rate = value
	consumed_label.text = \"%2.1f\" % value
	return consumption_rate


func _on_Cable_rotated() -> void:
	var connected: Array = _traverse_nodes(power.currentNode)
	for cable in cables:
		var id: int = cable.get_instance_id()
		cable.set_power(connected.has(id))
		
	if connected.has(xray_room_id):
		is_connected_to_xray = true
		xray_room.animationPlayer.play(xray_room.ACTIVE_ANIMATION)
	else:
		is_connected_to_xray = false
		xray_room.animationPlayer.play(xray_room.INACTIVE_ANIMATION)
		
	if connected.has(blood_room_id):
		is_connected_to_blood = true
		blood_room.animationPlayer.play(blood_room.ACTIVE_ANIMATION)
	else:
		is_connected_to_blood = false
		blood_room.animationPlayer.play(blood_room.INACTIVE_ANIMATION)
	set_consumption_rate(1 * len(connected))
	
	

func _traverse_nodes(current: Node2D, visited: Array = []) -> Array:
	if current == null:
		return visited
	
	
	var id = current.get_instance_id()
	
	# If the current instance has already been visited skip it, otherwise
	# add it to the already visited list.
	if visited.has(id):
		return visited
		
	visited.append(id)
	
	if not current.is_in_group(\"cables\"):
		return visited
	
	# Check if the current node is a cable and which edges are connected to
	# anything.
	
	for node in _traverse_nodes(current.get_up_node(), visited):
		if visited.has(node):
			continue
		else:
			visited.append(node)
	for node in _traverse_nodes(current.get_right_node(), visited):
		if visited.has(node):
			continue
		else:
			visited.append(node) 	
	for node in _traverse_nodes(current.get_down_node(), visited):
		if visited.has(node):
			continue
		else:
			visited.append(node) 	
	for node in _traverse_nodes(current.get_left_node(), visited):
		if visited.has(node):
			continue
		else:
			visited.append(node) 	
	return visited

"

[node name="Test" type="Node"]
script = SubResource( 1 )
POWER_RATIO = 15.0

[node name="PowerGenerator" parent="." groups=["generator"] instance=ExtResource( 2 )]
position = Vector2( 32, 24 )

[node name="Cable" parent="." groups=["cables"] instance=ExtResource( 1 )]
position = Vector2( 88, 24 )

[node name="Cable2" parent="." groups=["cables"] instance=ExtResource( 1 )]
position = Vector2( 88, 56 )
TYPE = 1

[node name="Cable3" parent="." groups=["cables"] instance=ExtResource( 1 )]
position = Vector2( 120, 24 )
TYPE = 1

[node name="Cable4" parent="." groups=["cables"] instance=ExtResource( 1 )]
position = Vector2( 120, 56 )
TYPE = 1

[node name="Cable5" parent="." groups=["cables"] instance=ExtResource( 1 )]
position = Vector2( 312, 56 )
TYPE = 2

[node name="Cable6" parent="." groups=["cables"] instance=ExtResource( 1 )]
position = Vector2( 280, 56 )
TYPE = 1

[node name="Cable7" parent="." groups=["cables"] instance=ExtResource( 1 )]
position = Vector2( 88, 88 )
TYPE = 2

[node name="Cable8" parent="." groups=["cables"] instance=ExtResource( 1 )]
position = Vector2( 88, 120 )
TYPE = 1

[node name="Cable9" parent="." groups=["cables"] instance=ExtResource( 1 )]
position = Vector2( 120, 88 )

[node name="Cable11" parent="." groups=["cables"] instance=ExtResource( 1 )]
position = Vector2( 152, 88 )
TYPE = 3

[node name="Cable12" parent="." groups=["cables"] instance=ExtResource( 1 )]
position = Vector2( 152, 120 )
TYPE = 2

[node name="Cable13" parent="." groups=["cables"] instance=ExtResource( 1 )]
position = Vector2( 88, 152 )
TYPE = 3

[node name="Cable14" parent="." groups=["cables"] instance=ExtResource( 1 )]
position = Vector2( 88, 184 )
TYPE = 2

[node name="Cable15" parent="." groups=["cables"] instance=ExtResource( 1 )]
position = Vector2( 120, 152 )
TYPE = 1

[node name="Cable16" parent="." groups=["cables"] instance=ExtResource( 1 )]
position = Vector2( 120, 184 )
TYPE = 2

[node name="Cable17" parent="." groups=["cables"] instance=ExtResource( 1 )]
position = Vector2( 152, 152 )
TYPE = 2

[node name="Cable18" parent="." groups=["cables"] instance=ExtResource( 1 )]
position = Vector2( 152, 184 )

[node name="Cable20" parent="." groups=["cables"] instance=ExtResource( 1 )]
position = Vector2( 216, 24 )
TYPE = 2

[node name="Cable22" parent="." groups=["cables"] instance=ExtResource( 1 )]
position = Vector2( 280, 152 )
TYPE = 1

[node name="Cable23" parent="." groups=["cables"] instance=ExtResource( 1 )]
position = Vector2( 152, 216 )
TYPE = 2

[node name="Cable24" parent="." groups=["cables"] instance=ExtResource( 1 )]
position = Vector2( 280, 88 )
TYPE = 1

[node name="Cable25" parent="." groups=["cables"] instance=ExtResource( 1 )]
position = Vector2( 152, 24 )
TYPE = 1

[node name="Cable26" parent="." groups=["cables"] instance=ExtResource( 1 )]
position = Vector2( 184, 56 )
TYPE = 1

[node name="Cable27" parent="." groups=["cables"] instance=ExtResource( 1 )]
position = Vector2( 184, 24 )
TYPE = 1

[node name="Cable28" parent="." groups=["cables"] instance=ExtResource( 1 )]
position = Vector2( 216, 56 )
TYPE = 1

[node name="Cable29" parent="." groups=["cables"] instance=ExtResource( 1 )]
position = Vector2( 312, 120 )
TYPE = 2

[node name="Cable31" parent="." groups=["cables"] instance=ExtResource( 1 )]
position = Vector2( 184, 88 )

[node name="Cable32" parent="." groups=["cables"] instance=ExtResource( 1 )]
position = Vector2( 184, 120 )
TYPE = 2

[node name="Cable33" parent="." groups=["cables"] instance=ExtResource( 1 )]
position = Vector2( 216, 88 )
TYPE = 1

[node name="Cable35" parent="." groups=["cables"] instance=ExtResource( 1 )]
position = Vector2( 248, 88 )
TYPE = 1

[node name="Cable36" parent="." groups=["cables"] instance=ExtResource( 1 )]
position = Vector2( 248, 120 )
TYPE = 1

[node name="Cable37" parent="." groups=["cables"] instance=ExtResource( 1 )]
position = Vector2( 312, 88 )
TYPE = 1

[node name="Cable38" parent="." groups=["cables"] instance=ExtResource( 1 )]
position = Vector2( 184, 184 )
TYPE = 3

[node name="Cable39" parent="." groups=["cables"] instance=ExtResource( 1 )]
position = Vector2( 216, 152 )
TYPE = 1

[node name="Cable40" parent="." groups=["cables"] instance=ExtResource( 1 )]
position = Vector2( 216, 184 )
TYPE = 1

[node name="Cable41" parent="." groups=["cables"] instance=ExtResource( 1 )]
position = Vector2( 248, 152 )
TYPE = 1

[node name="Cable42" parent="." groups=["cables"] instance=ExtResource( 1 )]
position = Vector2( 248, 184 )
TYPE = 1

[node name="Cable44" parent="." groups=["cables"] instance=ExtResource( 1 )]
position = Vector2( 280, 120 )
TYPE = 1

[node name="Cable45" parent="." groups=["cables"] instance=ExtResource( 1 )]
position = Vector2( 216, 216 )
TYPE = 1

[node name="Cable47" parent="." groups=["cables"] instance=ExtResource( 1 )]
position = Vector2( 248, 216 )
TYPE = 2

[node name="Bedroom" parent="." groups=["consumer"] instance=ExtResource( 4 )]
position = Vector2( 248, 56 )
CONSUMPTION_RATE = 5
ACTIVE_ANIMATION = "HappyActive"
INACTIVE_ANIMATION = "SadInactive"

[node name="Bedroom2" parent="." groups=["consumer"] instance=ExtResource( 4 )]
position = Vector2( 152, 56 )
CONSUMPTION_RATE = 5
ACTIVE_ANIMATION = "HappyActive"
INACTIVE_ANIMATION = "SadInactive"

[node name="Bedroom3" parent="." groups=["consumer"] instance=ExtResource( 4 )]
position = Vector2( 120, 120 )
CONSUMPTION_RATE = 5
ACTIVE_ANIMATION = "HappyActive"
INACTIVE_ANIMATION = "SadInactive"

[node name="Bedroom4" parent="." groups=["consumer"] instance=ExtResource( 4 )]
position = Vector2( 184, 152 )
CONSUMPTION_RATE = 5
ACTIVE_ANIMATION = "HappyActive"
INACTIVE_ANIMATION = "SadInactive"

[node name="Bedroom5" parent="." groups=["consumer"] instance=ExtResource( 4 )]
position = Vector2( 184, 216 )
CONSUMPTION_RATE = 5
ACTIVE_ANIMATION = "HappyActive"
INACTIVE_ANIMATION = "SadInactive"

[node name="BloodBank" parent="." instance=ExtResource( 5 )]
position = Vector2( 344, 88 )
CONSUMPTION_RATE = 4
ACTIVE_ANIMATION = "Active"
INACTIVE_ANIMATION = "Inactive"

[node name="XRay" parent="." instance=ExtResource( 3 )]
position = Vector2( 280, 184 )
CONSUMPTION_RATE = 10
ACTIVE_ANIMATION = "Active"
INACTIVE_ANIMATION = "Inactive"

[node name="Control" type="Control" parent="."]
anchor_left = 0.719
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -8.12802
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Generated" type="HBoxContainer" parent="Control/VBoxContainer"]
margin_right = 152.0
margin_bottom = 14.0

[node name="Title" type="Label" parent="Control/VBoxContainer/Generated"]
margin_right = 114.0
margin_bottom = 14.0
size_flags_horizontal = 3
text = "Power Generated:"
align = 2

[node name="Value" type="Label" parent="Control/VBoxContainer/Generated"]
margin_left = 118.0
margin_right = 152.0
margin_bottom = 14.0
size_flags_horizontal = 3

[node name="Consumed" type="HBoxContainer" parent="Control/VBoxContainer"]
margin_top = 18.0
margin_right = 152.0
margin_bottom = 32.0

[node name="Title" type="Label" parent="Control/VBoxContainer/Consumed"]
margin_right = 115.0
margin_bottom = 14.0
size_flags_horizontal = 3
text = "Power Consumed:"
align = 2

[node name="Value" type="Label" parent="Control/VBoxContainer/Consumed"]
margin_left = 119.0
margin_right = 152.0
margin_bottom = 14.0
size_flags_horizontal = 3

[node name="Ratio" type="HBoxContainer" parent="Control/VBoxContainer"]
margin_top = 36.0
margin_right = 152.0
margin_bottom = 50.0

[node name="Title" type="Label" parent="Control/VBoxContainer/Ratio"]
margin_right = 74.0
margin_bottom = 14.0
size_flags_horizontal = 3
text = "L + Ratio:"
align = 2

[node name="Value" type="Label" parent="Control/VBoxContainer/Ratio"]
margin_left = 78.0
margin_right = 152.0
margin_bottom = 14.0
size_flags_horizontal = 3
