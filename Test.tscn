[gd_scene load_steps=5 format=2]

[ext_resource path="res://src/cable/Cable.tscn" type="PackedScene" id=1]
[ext_resource path="res://src/power_generator/PowerGenerator.tscn" type="PackedScene" id=2]
[ext_resource path="res://src/power_consumer/PowerConsumer.tscn" type="PackedScene" id=3]

[sub_resource type="GDScript" id=1]
script/source = "extends Node

export var POWER_RATIO: float

var current_power: float = 0.0 setget set_current_power
var consumption_rate: float = 0.0 setget set_consumption_rate

onready var power: Node2D = $Madness/PowerGenerator

onready var power_label: Label = $Control/VBoxContainer/HBoxContainer/PowerValue
onready var consumption_label: Label = $Control/VBoxContainer/HBoxContainer2/ConsumptionValue
onready var net_label: Label = $Control/VBoxContainer/HBoxContainer3/NetValue

func _ready() -> void:
	assert(POWER_RATIO > 0)


func _process(delta: float) -> void:
	var current_nodes: Array = traverse_connected_to_current()
	var consumption: float = 0.0
	for id in current_nodes:
		var instance = instance_from_id(id)
		consumption += instance.CONSUMPTION_RATE
	set_consumption_rate(consumption * delta)
	
	if Input.is_action_just_pressed(\"ui_accept\"):
		set_current_power(current_power + POWER_RATIO * delta)

func traverse_connected_to_current() -> Array:
	return _traverse_nodes(power.currentNode)


func set_current_power(value: float) -> float:
	current_power = value
	power_label.text = str(current_power)
	return current_power


func set_consumption_rate(value: float) -> float:
	consumption_rate = value
	consumption_label.text = str(consumption_rate)
	return consumption_rate


func _traverse_nodes(current: Node2D, visited: Array = []) -> Array:
	if current == null:
		return visited
	
	var id = current.get_instance_id()
	
	# If the current instance has already been visited skip it, otherwise
	# add it to the already visited list.
	if visited.has(id):
		return visited
	else:
		visited.append(id)
	
	# Since we are traversing from the power node, any node that we are able
	# to visit are connected to power and thus their state must be set to `true`
	if current.has_method(\"set_power\"):
		current.set_power(true)
	
	if current.has_method(\"is_powered\"):
		current.is_powered()
	
	# Check if the current node is a cable and which edges are connected to
	# anything.
	if \"upNode\" in current:
		_traverse_nodes(current.upNode, visited)
	if \"downNode\" in current:
		_traverse_nodes(current.downNode, visited)
	if \"rightNode\" in current:
		_traverse_nodes(current.rightNode, visited)
	if \"leftNode\" in current:
		_traverse_nodes(current.downNode, visited)
	
	return visited
"

[node name="Test" type="Node"]
script = SubResource( 1 )
POWER_RATIO = 10.0

[node name="Control" type="Control" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="Control"]
margin_left = 280.0
margin_top = 472.0
margin_right = 416.0
margin_bottom = 522.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="HBoxContainer" type="HBoxContainer" parent="Control/VBoxContainer"]
margin_right = 136.0
margin_bottom = 14.0

[node name="CurrentPower" type="Label" parent="Control/VBoxContainer/HBoxContainer"]
margin_right = 114.0
margin_bottom = 14.0
text = "Generated Power:"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="PowerValue" type="Label" parent="Control/VBoxContainer/HBoxContainer"]
margin_left = 118.0
margin_right = 118.0
margin_bottom = 14.0

[node name="HBoxContainer2" type="HBoxContainer" parent="Control/VBoxContainer"]
margin_top = 18.0
margin_right = 136.0
margin_bottom = 32.0

[node name="PowerConsumption" type="Label" parent="Control/VBoxContainer/HBoxContainer2"]
margin_right = 132.0
margin_bottom = 14.0
text = "Power Consumption:"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ConsumptionValue" type="Label" parent="Control/VBoxContainer/HBoxContainer2"]
margin_left = 136.0
margin_right = 136.0
margin_bottom = 14.0

[node name="HBoxContainer3" type="HBoxContainer" parent="Control/VBoxContainer"]
margin_top = 36.0
margin_right = 136.0
margin_bottom = 50.0

[node name="NetPower" type="Label" parent="Control/VBoxContainer/HBoxContainer3"]
margin_right = 70.0
margin_bottom = 14.0
text = "Net Power:"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="NetValue" type="Label" parent="Control/VBoxContainer/HBoxContainer3"]
margin_left = 74.0
margin_right = 74.0
margin_bottom = 14.0

[node name="Madness" type="Node2D" parent="."]

[node name="PowerGenerator" parent="Madness" instance=ExtResource( 2 )]
position = Vector2( 160, 160 )

[node name="PowerConsumer" parent="Madness" instance=ExtResource( 3 )]
position = Vector2( 416, 224 )
CONSUMPTION_RATE = 2

[node name="PowerConsumer2" parent="Madness" instance=ExtResource( 3 )]
position = Vector2( 416, 96 )
CONSUMPTION_RATE = 3

[node name="PowerConsumer3" parent="Madness" instance=ExtResource( 3 )]
position = Vector2( 352, 352 )
CONSUMPTION_RATE = 1

[node name="Cable" parent="Madness" instance=ExtResource( 1 )]
position = Vector2( 224, 160 )
TYPE = 2

[node name="Cable2" parent="Madness" instance=ExtResource( 1 )]
position = Vector2( 224, 224 )
TYPE = 3

[node name="Cable5" parent="Madness" instance=ExtResource( 1 )]
position = Vector2( 288, 96 )
TYPE = 1

[node name="Cable10" parent="Madness" instance=ExtResource( 1 )]
position = Vector2( 352, 96 )
TYPE = 3

[node name="Cable3" parent="Madness" instance=ExtResource( 1 )]
position = Vector2( 224, 288 )
TYPE = 2

[node name="Cable4" parent="Madness" instance=ExtResource( 1 )]
position = Vector2( 224, 352 )
TYPE = 1

[node name="Cable11" parent="Madness" instance=ExtResource( 1 )]
position = Vector2( 352, 224 )
TYPE = 2

[node name="Cable6" parent="Madness" instance=ExtResource( 1 )]
position = Vector2( 288, 160 )
TYPE = 3

[node name="Cable7" parent="Madness" instance=ExtResource( 1 )]
position = Vector2( 288, 224 )
TYPE = 3

[node name="Cable8" parent="Madness" instance=ExtResource( 1 )]
position = Vector2( 288, 288 )
TYPE = 1

[node name="Cable9" parent="Madness" instance=ExtResource( 1 )]
position = Vector2( 288, 352 )
TYPE = 4
